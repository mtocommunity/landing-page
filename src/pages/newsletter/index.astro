---
import { getCollection } from "astro:content";
import NewsletterLayout from "../../layouts/newsletter/index.astro";
import { calculateReadingTime, formatDate3 } from "../../utils";

let authors: { amountPosts: number; data: any }[] = [];
const authorsCollection = await getCollection("author");

// Resolve all newsletters and sort them by date
const newsLetterCollection = (await getCollection("newsletter")).sort(
  (a, b) => {
    return b.data.date.getTime() - a.data.date.getTime();
  }
);

authorsCollection.forEach((author) => {
  const authorNewsletters = newsLetterCollection.filter((newsletter) =>
    newsletter.data.authors.map((x) => x.id).includes(author.id)
  );
  if (authorNewsletters.length > 0) {
    authors.push({
      ...author,
      amountPosts: authorNewsletters.length,
    });
  }
});

// Get the top 10 latest newsletters
const lastNewsletter = newsLetterCollection.slice(0, 5);

// Sort authors by amount of posts and get the top 5
authors = authors.sort((a, b) => b.amountPosts - a.amountPosts);
authors = authors.slice(0, 5);
---

<NewsletterLayout
  author={{
    name: "ManyToOne Community",
  }}
  meta={{
    title: "Newsletter - MTO Community",
    description:
      "Esta newsletter tiene como objetivo compartir conocimiento en formato escrito, con publicaciones breves que pueden leerse en pocos minutos. Los contenidos son redactados por miembros de la comunidad, brindándoles un espacio para expresarse y compartir con los demás. Por ahora, no se envía por correo electrónico, aunque está en nuestros planes a mediano plazo.",
    keywords: ["many to one community", "newsletter", "search"],
  }}
>
  <div
    class="bg-gradient-to-b from-mto_dark_gray to-mto_blue_dark min-h-screen text-white pt-[20dvh] flex flex-col items-center"
  >
    <div class="flex flex-col w-full max-w-screen-md items-center">
      <div class="flex flex-col items-center gap-8 mb-20">
        <h2 class="text-2xl text-white font-bold font-main_sans">Newsletter</h2>
        <p class="text-justify mx-4">
          Esta newsletter tiene como objetivo compartir conocimiento en formato
          escrito, con publicaciones breves que pueden leerse en pocos minutos.
          Los contenidos son redactados por miembros de la comunidad,
          brindándoles un espacio para expresarse y compartir con los demás. Por
          ahora, no se envía por correo electrónico, aunque está en nuestros
          planes a mediano plazo.
        </p>
      </div>
      <!-- <div>
        <h3 class="text-xl text-white font-bold font-main_sans">
          Recomendados
        </h3>
        {}
      </div> -->
      <div class="mt-16 w-full flex flex-col items-center">
        <h3 class="text-xl text-white font-bold font-main_sans mb-16">
          Últimos posts
        </h3>
        <!-- Lastest posts -->
        {
          lastNewsletter.map((post) => (
            <a
              class="flex justify-between gap-3 items-center w-full"
              href={`/newsletter/${post.slug}`}
            >
              <span class="font-main_sans text-mto_red text-sm">
                {formatDate3(post.data.date).slice(0, 9)}
              </span>
              <h4 class="text-nowrap w-auto flex-1 truncate">
                {post.data.title}
              </h4>
              <span class="text-gray-300">
                {calculateReadingTime(post.body)}
              </span>
            </a>
          ))
        }
      </div>
      <div class="my-32">
        <h3 class="text-xl font-bold font-main_sans mb-16">
          Principales Autores
        </h3>
        <div class="flex flex-col gap-16">
          {
            authors.map((author) => (
              <a
                class="flex justify-center items-center gap-20"
                href={`/newsletter/author/${author?.data.username}`}
              >
                <div class="w-24 lg:w-36 flex flex-col select-none">
                  <img
                    src={author?.data.avatar}
                    class="rounded-full aspect-square object-cover"
                  />
                  <span class="bg-mto_red text-white p-2 relative -top-8 justify-center items-center flex">
                    {author?.data.name}
                  </span>
                </div>
                <div class="flex flex-col gap-2 items-center font-bold -top-4 relative">
                  <span>{`${author.amountPosts >= 10 ? author.amountPosts : "0" + author.amountPosts}`}</span>
                  <span>Posts</span>
                </div>
              </a>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</NewsletterLayout>
